@model MailApplication.Models.SeedBucketModelView
@{
    ViewBag.Title = "Edit";
}
<div class="row ">
    <div class="col-xs-5">
        <h2>Edit SeedBucket</h2>
    </div>
    <div class="col-xs-1 pull-right">
        <button type="button" class="pull-right btn btn-primary btn-new" title="Add" onclick="location.href='/SeedBucket/RunBucket/@Model.SeedBucket.Id'">Run</button>
    </div>
</div>
<hr />
<form action="/SeedBucket/Update" method="post">
    <div class="container">
        <div class="form-group row">
            <div class="col-10">
                <input class="form-control" type="hidden" value="@Model.SeedBucket.Id" id="idSeedBucket" name="idSeedBucket">
            </div>
        </div>

        <div class="form-group row">
            <label for="">Name*</label>
            <input type="text" class="form-control" id="name" name="name" value="@Model.SeedBucket.Name" placeholder="Enter name">
        </div>

        <div class="form-group row">
            <label for="">Description</label>
            <input type="text" class="form-control" id="description" name="description" value="@Model.SeedBucket.Description" placeholder="Enter description">
        </div>

        <div class="form-group row">
            <label for="">UUID</label>
            <input type="text" class="form-control" id="uuid" name="uuid" value="@Model.SeedBucket.UUID" placeholder="Enter UUID" disabled>
            <input type="hidden" class="form-control" id="uuid" name="uuid" value="@Model.SeedBucket.UUID" placeholder="Enter UUID">
        </div>

        <div class="form-group row">
            <label for="">Seeds</label>
        </div>
        <div id="block_container">
            <div class="subject-info-box-1 col-xs-4">
                <select multiple="multiple" id='lstBox1' class="form-control select-size">
                    @foreach (var item in Model.AvalibleSeeds)
                    {
                        if (!item.Value)
                        {
                            <option value="@item.Key.Id">@item.Key.UserName</option>
                        }
                    }
                </select>
            </div>

            <div class="subject-info-arrows text-center col-xs-2">
                <button type="button" id="btnRight" class="btn btn-primary" ><span class="glyphicon glyphicon-chevron-right"></span></button><br />
                <button type="button" id="btnLeft" class="btn btn-primary" ><span class=" glyphicon glyphicon-chevron-left"></span></button><br />
            </div>

            <div class="subject-info-box-2 col-xs-4">
                <select multiple="multiple" id='lstBox2' class="form-control select-size">
                    @foreach (var item in Model.AvalibleSeeds)
                    {
                        if (item.Value)
                        {
                            <option value="@item.Key.Id">@item.Key.UserName</option>
                        }
                    }
                </select>
            </div>

            <div class="clearfix"></div>
        </div>
        <br />
        <div class="form-group row">
            <label for="">Actions</label>
        </div>
        <div class="block_container">
            @Html.CheckBox("markAsRead", Model.SeedBucket.MarkMailAsRead)
            <label class="form-check-label" for="markAsRead">Mark mails as read</label>
        </div>

        <div class="block_container">
            @Html.CheckBox("moveToInbox", Model.SeedBucket.MoveMailToInbox)
            <label class="form-check-label" for="moveToInbox">Move mails to Inbox</label>
        </div>

        <div class="block_container">
            @Html.CheckBox("replyMail", Model.SeedBucket.ReplyMail)
            <label class="form-check-label" for="replyMail">Reply mails</label>
        </div>

        <div class="block_container">
            @Html.CheckBox("clickMail", Model.SeedBucket.ClickMail)
            <label class="form-check-label" for="clickMail">Click mails</label>
        </div>

        <div class="block_container">
            @Html.CheckBox("forwardMail", Model.SeedBucket.ForwardMail)
            <label class="form-check-label" for="forwardMail">Forward mails</label>
        </div>

        <br />
        <div class="form-group row">
            <label for="">Sender Domain</label>
        </div>

        <div class="block_container">
            <div>
                <input type="text" id="myInput" class="list-group-item form-control col-xs-4" placeholder="Enter Sender Domain...">
                <span onclick="newElement()" class="btn btn-primary">Add</span>
            </div>


            <ul id="myUL" name="list" class="list-group col-xs-4"></ul>
        </div>

        <input type="hidden" id="seeds" name="seeds" value="" />
        <input type="hidden" id="senderDomains" name="senderDomains" value="" />
        <input type="submit" class="btn pull-right btn-success" value="Save" />
    </div>
</form>
<script type="text/javascript">

    var SenderDomains = [];

    var seedTobucket = @Html.Raw(Json.Encode(Model.SeedsInBucket));

    function addSeedId(seedId) {
        var selected = document.getElementById(seedId).checked;

        if (selected) {
            seedTobucket.push(seedId);

        } else {
            var positionIdSeed = seedTobucket.indexOf(seedId);
            seedTobucket.splice(positionIdSeed,1);

        }

        document.getElementById('seeds').value = seedTobucket;
    }

    $(document).ready(function () {
        document.getElementById('seeds').value = seedTobucket;
    });

    (function () {
        $('#btnRight').click(function (e) {
            var selectedOpts = $('#lstBox1 option:selected');

            $.each(selectedOpts, function (index, seed) {
                
                //var seedId = selectedOpts.attr("value");
                var seedId = seed.value;
                seedTobucket.push(seedId);
            });

            document.getElementById('seeds').value = seedTobucket;
            if (selectedOpts.length == 0) {
                e.preventDefault();
            }

            $('#lstBox2').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });

        $('#btnAllRight').click(function (e) {
            var selectedOpts = $('#lstBox1 option');
            if (selectedOpts.length == 0) {
                e.preventDefault();
            }

            $('#lstBox2').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });

        $('#btnLeft').click(function (e) {
            var selectedOpts = $('#lstBox2 option:selected');

            $.each(selectedOpts, function (index, seed) {
                
            
            var seedId = seed.value;

            var positionIdSeed = seedTobucket.indexOf(seedId);
            seedTobucket.splice(positionIdSeed, 1);
            document.getElementById('seeds').value = seedTobucket;

            });

            if (selectedOpts.length == 0) {
                e.preventDefault();
            }

            $('#lstBox1').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });

        $('#btnAllLeft').click(function (e) {
            var selectedOpts = $('#lstBox2 option');
            if (selectedOpts.length == 0) {
                e.preventDefault();
            }

            $('#lstBox1').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });
    }(jQuery));

    // Click on a close button to hide the current list item
    var close = document.getElementsByClassName("close");
    var i;
    for (i = 0; i < close.length; i++) {
        close[i].onclick = function () {
            var div = this.parentElement;
            div.style.display = "none";
        }
    }

    // Add a "checked" symbol when clicking on a list item
    var list = document.querySelector('ul');
    list.addEventListener('click', function (ev) {
        if (ev.target.tagName === 'LI') {
            ev.target.classList.toggle('checked');
        }
    }, false);


    // Create a new list item when clicking on the "Add" button
    function newElement() {
        var li = document.createElement("li");
        li.className = "list-group-item col-xs-11";
        var inputValue = document.getElementById("myInput").value;

        if (inputValue != "" || inputValue != null)
            SenderDomains.push(inputValue);

        document.getElementById('senderDomains').value = SenderDomains;
        var t = document.createTextNode(inputValue);
        li.appendChild(t);
        if (inputValue === '') {
            alert("You must write something!");
        } else {
            document.getElementById("myUL").appendChild(li);
        }
        document.getElementById("myInput").value = "";

        var span = document.createElement("a");
        var txt = document.createTextNode("\u00D7");
        span.id = "senderDomainId";
        span.addEventListener("click", function () { func(inputValue); }, false);
        span.className = "close";
        span.appendChild(txt);

        li.appendChild(span);

        for (i = 0; i < close.length; i++) {
            close[i].onclick = function () {
                var div = this.parentElement;
                div.style.display = "none";
            }
        }
    }

    function func(x) {
        var positionIdSeed = SenderDomains.indexOf(x);
        SenderDomains.splice(positionIdSeed, 1);
        document.getElementById('senderDomains').value = SenderDomains;
    }

</script>